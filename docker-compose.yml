version: '3.8'

services:
  app:
    build: app/
    ports:
      - "8000:80"
    depends_on:
      - db
    environment:
      - MYSQL_HOST=ows-db-1
      - MYSQL_USER=root
      - MYSQL_PASSWORD=<uw_wachtwoord>
      - MYSQL_DB=hive
      - AI_HOST=ows-ai-1
      - AI_PORT=5001
    networks:
    - default
    volumes:
      - ./App:/var/www/html

  db:
    image: mysql:8.0.33
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=<uw_wachtwoord>
      - MYSQL_DATABASE=hive
      - MYSQL_USER=root
    volumes:
      - db_data:/var/lib/mysql
      - ./Database/hive.sql:/docker-entrypoint-initdb.d/hive.sql
    networks:
    - default

  ai:
    build: ./AI
    ports:
      - "5001:5000"
    networks:
    - default
    volumes:
      - ./AI:/app
    environment:
      - FLASK_ENV=development
      - FLASK_APP=app.py

  jenkins:
    build:
      dockerfile: Jenkins/Dockerfile
    ports:
      - "8080:8080"
      - "50000:50000"
    environment:
      JENKIN_PORT: 8080
    networks:
    - default
    - jenkins
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client
    
  sonarqube:
    build: ./SonarQube
    image: sonarqube:latest
    ports:
      - "9000:9000"
    networks:
    - default
    - jenkins
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp

volumes:
  db_data:
  jenkins-data:
  jenkins-docker-certs:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:

networks:
  default:
  jenkins:
